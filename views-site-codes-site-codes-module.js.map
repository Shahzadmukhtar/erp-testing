{"version":3,"sources":["webpack:///./src/app/services/shared/site-code.service.ts","webpack:///./src/app/views/site-codes/site-code/site-code.component.html","webpack:///./src/app/views/site-codes/site-code/site-code.component.scss","webpack:///./src/app/views/site-codes/site-code/site-code.component.ts","webpack:///./src/app/views/site-codes/site-codes-routing.module.ts","webpack:///./src/app/views/site-codes/site-codes.component.html","webpack:///./src/app/views/site-codes/site-codes.component.scss","webpack:///./src/app/views/site-codes/site-codes.component.ts","webpack:///./src/app/views/site-codes/site-codes.module.ts","webpack:///./src/app/views/site-codes/site-list/site-list.component.html","webpack:///./src/app/views/site-codes/site-list/site-list.component.scss","webpack:///./src/app/views/site-codes/site-list/site-list.component.ts"],"names":[],"mappings":"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","file":"views-site-codes-site-codes-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {FormGroup , FormControl , Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteCodeService {\n\n\n  \n  form: FormGroup = new FormGroup({\n    id : new FormControl(''),\n    code : new FormControl('' , Validators.required),\n    description : new FormControl('', Validators.required),\n    colour_code: new FormControl('')\n  })\n\n  initializeFormgroup()\n  {\n    this.form.setValue({\n      id : '',\n      code : '',\n      description : '',\n      colour_code : ''\n    })\n  }\n\n  constructor(private http : HttpClient) { }\n\n  save_site(site_status)\n  {\n      this.http.post(`http://localhost:3002/create-site-code` ,{site_status} )\n      .subscribe(res=> {\n        console.log(res)\n      });\n  }\n\n  update_site(site_status)\n  {\n    this.http.post(`http://localhost:3002/update-site-code` ,{site_status} )\n      .subscribe(res=> {\n        console.log(res)\n      });\n  }\n\n  getSiteList()\n  {\n  return this.http.get(`http://localhost:3002/sites_status`)\n  }\n\n  populateform(formvalue)\n  {\n    this.form.setValue(formvalue);\n  }\n\n  delete_site(site_status)\n  {\n    this.http.post(`http://localhost:3002/delete-site` ,{site_status} )\n      .subscribe(res=> {\n        console.log(res)\n      });\n  }\n\n}\n","module.exports = \"<mat-toolbar class=\\\"custome-mat-toolbar\\\">\\n  <span>{{site.form.controls['id'].value?\\\"Modify Status Code\\\":\\\"New Status Code\\\"}}</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n</mat-toolbar>\\n<form [formGroup]=\\\"site.form\\\" class=\\\"normal-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\n      <mat-grid-tile>\\n        <div class=\\\"controles-container\\\">\\n          <mat-form-field>\\n              <label>Code</label>\\n            <input formControlName=\\\"code\\\" matInput>\\n            <mat-error>This field is mandatory .</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n              <label>Description</label>\\n            <input formControlName=\\\"description\\\" matInput>\\n            <mat-error>This field is mandatory .</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <label>Select Color</label>\\n            <!-- <input readonly formControlName=\\\"colour_code\\\" matInput class=\\\"status_color\\\" [style.background]=\\\"color1\\\"  [(colorPicker)]=\\\"color1\\\" (colorPickerOpen)=\\\"onEventLog('colorPickerOpen', $event)\\\" (colorPickerClose)=\\\"setColour($event)\\\" (cpInputChange)=\\\"onEventLog('cpInputChange', $event)\\\" (cpSliderDragStart)=\\\"onEventLog('cpSliderDragStart', $event)\\\" (cpSliderDragEnd)=\\\"onEventLog('cpSliderDragEnd', $event)\\\"/> -->\\n      <input readonly formControlName=\\\"colour_code\\\" matInput class=\\\"status_color\\\" [style.background]=\\\"color1\\\"  [(colorPicker)]=\\\"color1\\\" (colorPickerClose)=\\\"setColour($event)\\\"/>\\n            <mat-error>This field is mandatory .</mat-error> \\n          </mat-form-field>\\n          <div class=\\\"button-row\\\">\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"clear()\\\">Clear</button>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"site.form.invalid\\\">Submit</button>\\n          </div>\\n        </div>\\n      </mat-grid-tile>\\n     \\n    </mat-grid-list>\\n  </form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpdGUtY29kZXMvc2l0ZS1jb2RlL3NpdGUtY29kZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit , ViewContainerRef } from '@angular/core';\nimport { SiteCodeService } from '../../../services/shared/site-code.service';\nimport { NotificationsService } from '../../../services/shared/notifications.service';\nimport { MatDialogRef } from '@angular/material';\nimport { ColorPickerService, Cmyk } from 'ngx-color-picker';\n\n@Component({\n  selector: 'app-site-code',\n  templateUrl: './site-code.component.html',\n  styleUrls: ['./site-code.component.scss']\n})\nexport class SiteCodeComponent implements OnInit {\n\n  constructor(\n    private site : SiteCodeService ,\n    public vcRef: ViewContainerRef,\n    private cpService: ColorPickerService ,\n    private Notification : NotificationsService,\n    public matdilogref : MatDialogRef<SiteCodeComponent>\n    ) { }\n\n\n  ngOnInit() {\n  }\n\n  public toggle: boolean = false;\n\n  public rgbaText: string = 'rgba(165, 26, 214, 0.2)';\n\n  public arrayColors: any = {\n    color1: '#2883e9'\n  };\n\n  public selectedColor: string = 'color1';\n\n \n  public onEventLog(event: string, data: any): void {\n    console.log(event, data);\n  }\n\n  public onChangeColorCmyk(color: string): Cmyk {\n    const hsva = this.cpService.stringToHsva(color);\n\n    if (hsva) {\n      const rgba = this.cpService.hsvaToRgba(hsva);\n\n      return this.cpService.rgbaToCmyk(rgba);\n    }\n\n    return new Cmyk(0, 0, 0, 0);\n  }\n\n  public onChangeColorHex8(color: string): string {\n    const hsva = this.cpService.stringToHsva(color, true);\n\n    if (hsva) {\n      return this.cpService.outputFormat(hsva, 'rgba', null);\n    }\n\n    return '';\n  }\n  clear()\n  {\n    this.site.form.reset();\n    this.site.initializeFormgroup();\n  }\n\n  setColour(color)\n  {\n    this.site.form.patchValue({\n      colour_code: color\n    });\n    }\n\n\n  onSubmit()\n  {\n    if(this.site.form.valid)\n    {\n      if(!this.site.form.get('id').value)\n      {\n      this.site.save_site(this.site.form.value)\n      this.Notification.notification(\"Recorde Enter\")\n      }\n      else\n      {\n      this.site.update_site(this.site.form.value)\n      this.Notification.notification(\"Recorde Updated\")\n      }\n      this.site.form.reset();\n      this.site.initializeFormgroup();\n      this.onClose();\n    }\n  }\n\n  onClose()\n  {\n    this.site.form.reset();\n    this.site.initializeFormgroup();\n    this.matdilogref.close();\n   \n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SiteCodesComponent } from './site-codes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SiteCodesComponent,\n    data: {\n      title: 'Dashboard'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SiteCodesRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <mat-toolbar>\\n  <span class=\\\"example-fill-remaining-space\\\"></span>\\n  <span>Site Code</span>\\n  <span class=\\\"example-fill-remaining-space\\\"></span>\\n  </mat-toolbar>\\n  <app-site-list></app-site-list>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpdGUtY29kZXMvc2l0ZS1jb2Rlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-site-codes',\n  templateUrl: './site-codes.component.html',\n  styleUrls: ['./site-codes.component.scss']\n})\nexport class SiteCodesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { SiteCodesComponent } from './site-codes.component';\nimport { SiteCodesRoutingModule } from './site-codes-routing.module';\nimport { SiteListComponent } from './site-list/site-list.component';\nimport { SiteCodeComponent } from './site-code/site-code.component';\nimport {MaterialModule} from '../../modules/material/material.module';\nimport {ReactiveFormsModule , FormsModule} from '@angular/forms';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { CommonModule } from '@angular/common';  \n\n@NgModule({\n  imports: [\n    FormsModule,\n    ChartsModule,\n    BsDropdownModule,\n    SiteCodesRoutingModule,\n    ButtonsModule.forRoot(),\n    MaterialModule,\n    ReactiveFormsModule,\n    ColorPickerModule,\n    CommonModule\n  ],\n  declarations: [ SiteCodesComponent , SiteListComponent, SiteCodeComponent ],\n  entryComponents : [SiteCodeComponent]\n})\nexport class SiteCodesModule { }\n","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <button mat-raised-button (click)=\\\"onCreate()\\\">\\n      <mat-icon>add</mat-icon>Create\\n    </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n      <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n      <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n        <mat-icon>close</mat-icon>\\n      </button>\\n    </mat-form-field>\\n<mat-table [dataSource]=\\\"sites\\\"  matSort>\\n<!-- Position Column -->\\n<ng-container matColumnDef=\\\"id\\\">\\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Id </mat-header-cell>\\n  <mat-cell *matCellDef=\\\"let element\\\" > {{element.id}} </mat-cell>\\n</ng-container>\\n\\n<!-- Name Column -->\\n<ng-container matColumnDef=\\\"code\\\">\\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Code </mat-header-cell>\\n  <mat-cell *matCellDef=\\\"let element\\\"> {{element.code}} </mat-cell>\\n</ng-container>\\n\\n<!-- Weight Column -->\\n<ng-container matColumnDef=\\\"description\\\">\\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Description </mat-header-cell>\\n  <mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </mat-cell>\\n</ng-container>\\n\\n<ng-container matColumnDef=\\\"colour_code\\\" [ngClass]=\\\"'customWidthClass'\\\">\\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Colour </mat-header-cell>\\n <mat-cell *matCellDef=\\\"let element\\\"   [ngStyle]=\\\"{'background-color':element.colour_code, color:'white'}\\\"> {{element.colour_code}} </mat-cell>\\n</ng-container>\\n<ng-container matColumnDef=\\\"actions\\\">\\n  <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\n  <mat-cell *matCellDef=\\\"let row\\\">\\n    <button mat-icon-button (click)=\\\"onEdit(row)\\\"><mat-icon>launch</mat-icon></button>\\n    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"onDelete(row)\\\"><mat-icon>delete_outline</mat-icon></button>\\n  </mat-cell>\\n</ng-container>\\n<ng-container matColumnDef=\\\"loading\\\">\\n  <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n    Loading data...\\n  </mat-footer-cell>\\n</ng-container>\\n<ng-container matColumnDef=\\\"noData\\\">\\n  <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n    No data.\\n  </mat-footer-cell>\\n</ng-container>\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n<mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':sites!=null}\\\"></mat-footer-row>\\n<mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(sites!=null && sites.data.length==0)}\\\"></mat-footer-row>\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpdGUtY29kZXMvc2l0ZS1saXN0L3NpdGUtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit , ViewChild } from '@angular/core';\nimport { SiteCodeService } from '../../../services/shared/site-code.service';\nimport { MatTableDataSource , MatSort , MatPaginator } from '@angular/material';\nimport {MatDialog , MatDialogConfig} from '@angular/material';\nimport { SiteCodeComponent } from '../site-code/site-code.component';\nimport { NotificationsService } from '../../../services/shared/notifications.service';\n\n@Component({\n  selector: 'app-site-list',\n  templateUrl: './site-list.component.html',\n  styleUrls: ['./site-list.component.scss']\n})\nexport class SiteListComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'code', 'description', 'colour_code', 'actions'];\n  constructor(private site : SiteCodeService , private dialog : MatDialog\n   , private Notification : NotificationsService) { }\n\n\n   searchKey;\n\n   @ViewChild(MatSort) sort : MatSort;\n   @ViewChild(MatPaginator) paginator :MatPaginator;\n \n   sites : MatTableDataSource<any>;\n \n   ngOnInit() {\n    this.site.getSiteList().subscribe(data => {\n      this.sites =  new MatTableDataSource(data as {id : number ,code: string, description: string, colour_code : string }[])\n      this.sites.sort = this.sort;\n     this.sites.paginator = this.paginator;\n     });\n   }\n \n   onSearchClear()\n   {\n     this.searchKey = \"\";\n     this.applyFilter();\n   }\n \n   applyFilter()\n   {\n     this.sites.filter = this.searchKey.trim().toLowerCase();\n   }\n \n   onCreate()\n   {\n     const dilogconfige = new MatDialogConfig();\n     dilogconfige.disableClose = true;\n     dilogconfige.width = \"60%\";\n     dilogconfige.autoFocus = true;\n     const dilogref = this.dialog.open(SiteCodeComponent,dilogconfige)\n     dilogref.afterClosed().subscribe(result => {\n       setTimeout(() => {\n        this.ngOnInit();\n        }, 1000);\n     });\n   }\n \n   onEdit(row)\n   {\n     this.site.populateform(row);\n     const dilogconfige = new MatDialogConfig();\n     dilogconfige.disableClose = true;\n     dilogconfige.width = \"60%\";\n     dilogconfige.autoFocus = true;\n     const dilogref = this.dialog.open(SiteCodeComponent,dilogconfige)\n     dilogref.afterClosed().subscribe(result => {\n       setTimeout(() => {\n        this.ngOnInit();\n        }, 1000);\n     });\n   }\n \n   onDelete(row)\n   {\n     this.site.delete_site(row)\n     this.Notification.warn(\"Recorde Deleted\")\n     setTimeout(()=>{\n       this.ngOnInit();\n  }, 500);\n   }\n\n}\n"],"sourceRoot":""}