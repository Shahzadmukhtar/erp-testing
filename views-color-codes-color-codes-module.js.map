{"version":3,"sources":["webpack:///./src/app/views/color-codes/color-code/color-code.component.html","webpack:///./src/app/views/color-codes/color-code/color-code.component.scss","webpack:///./src/app/views/color-codes/color-code/color-code.component.ts","webpack:///./src/app/views/color-codes/color-codes-routing.module.ts","webpack:///./src/app/views/color-codes/color-codes.component.html","webpack:///./src/app/views/color-codes/color-codes.component.ts","webpack:///./src/app/views/color-codes/color-codes.module.ts","webpack:///./src/app/views/color-codes/color-list/color-list.component.html","webpack:///./src/app/views/color-codes/color-list/color-list.component.scss","webpack:///./src/app/views/color-codes/color-list/color-list.component.ts"],"names":[],"mappings":"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","file":"views-color-codes-color-codes-module.js","sourcesContent":["module.exports = \"<mat-toolbar class=\\\"custome-mat-toolbar\\\">\\n  <span>{{color.form.controls['id'].value?\\\"Modify Status Code\\\":\\\"New Status Code\\\"}}</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n</mat-toolbar>\\n<form [formGroup]=\\\"color.form\\\" class=\\\"normal-form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\n      <mat-grid-tile>\\n        <div class=\\\"controles-container\\\">\\n          <mat-form-field>\\n              <label>Code</label>\\n            <input formControlName=\\\"code\\\" matInput>\\n            <mat-error>This field is mandatory .</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n              <label>Description</label>\\n            <input formControlName=\\\"description\\\" matInput>\\n            <mat-error>This field is mandatory .</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <label>Select Color</label>\\n            <!-- <input readonly formControlName=\\\"colour_code\\\" matInput class=\\\"status_color\\\" [style.background]=\\\"color1\\\"  [(colorPicker)]=\\\"color1\\\" (colorPickerOpen)=\\\"onEventLog('colorPickerOpen', $event)\\\" (colorPickerClose)=\\\"setColour($event)\\\" (cpInputChange)=\\\"onEventLog('cpInputChange', $event)\\\" (cpSliderDragStart)=\\\"onEventLog('cpSliderDragStart', $event)\\\" (cpSliderDragEnd)=\\\"onEventLog('cpSliderDragEnd', $event)\\\"/> -->\\n      <input readonly formControlName=\\\"colour_code\\\" matInput class=\\\"status_color\\\" [style.background]=\\\"color1\\\"  [(colorPicker)]=\\\"color1\\\" (colorPickerClose)=\\\"setColour($event)\\\"/>\\n            <mat-error>This field is mandatory .</mat-error> \\n          </mat-form-field>\\n          <div class=\\\"button-row\\\">\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"clear()\\\">Clear</button>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"color.form.invalid\\\">Submit</button>\\n          </div>\\n        </div>\\n      </mat-grid-tile>\\n     \\n    </mat-grid-list>\\n  </form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbG9yLWNvZGVzL2NvbG9yLWNvZGUvY29sb3ItY29kZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit , ViewContainerRef , ViewChild } from '@angular/core';\nimport { ColorCodeService } from '../../../services/shared/color-code.service';\nimport { ColorPickerService, Cmyk } from 'ngx-color-picker';\nimport { NotificationsService } from '../../../services/shared/notifications.service';\nimport { MatDialogRef } from '@angular/material';\nimport { MatTableDataSource , MatSort , MatPaginator } from '@angular/material';\n\n@Component({\n  selector: 'app-color-code',\n  templateUrl: './color-code.component.html',\n  styleUrls: ['./color-code.component.scss']\n})\nexport class ColorCodeComponent implements OnInit {\n\n  searchKey;\n  message : MatTableDataSource<any>\n  @ViewChild(MatSort) sort : MatSort;\n  @ViewChild(MatPaginator) paginator :MatPaginator;\n\n  getcolors()\n  {\n      this.color.getColorList().subscribe(data => {\n      this.message =  new MatTableDataSource(data as {id : number ,code: string, description: string, colour_code : string }[])\n    });\n  }\n\n  constructor(\n    private color : ColorCodeService ,\n    public vcRef: ViewContainerRef,\n    private cpService: ColorPickerService ,\n    private Notification : NotificationsService,\n    public matdilogref : MatDialogRef<ColorCodeComponent>\n    ) { }\n\n  ngOnInit() {    \n    this.color.currentMessage.subscribe(message => this.message = message)\n    this.getcolors()\n    setTimeout(() => {\n      this.color.changeMessage(this.message)\n    }, 1000);\n  }\n\n\n  public toggle: boolean = false;\n\n  public rgbaText: string = 'rgba(165, 26, 214, 0.2)';\n\n  public arrayColors: any = {\n    color1: '#2883e9'\n  };\n\n  public selectedColor: string = 'color1';\n\n \n  public onEventLog(event: string, data: any): void {\n    console.log(event, data);\n  }\n\n  public onChangeColorCmyk(color: string): Cmyk {\n    const hsva = this.cpService.stringToHsva(color);\n\n    if (hsva) {\n      const rgba = this.cpService.hsvaToRgba(hsva);\n\n      return this.cpService.rgbaToCmyk(rgba);\n    }\n\n    return new Cmyk(0, 0, 0, 0);\n  }\n\n  public onChangeColorHex8(color: string): string {\n    const hsva = this.cpService.stringToHsva(color, true);\n\n    if (hsva) {\n      return this.cpService.outputFormat(hsva, 'rgba', null);\n    }\n\n    return '';\n  }\n  clear()\n  {\n    this.color.form.reset();\n    this.color.initializeFormgroup();\n  }\n\n  setColour(color)\n  {\n    this.color.form.patchValue({\n      colour_code: color\n    });\n    }\n\n  onSubmit()\n  {\n    if(this.color.form.valid)\n    {\n      if(!this.color.form.get('id').value)\n      {\n      this.color.save_color_status(this.color.form.value)\n      this.Notification.notification(\"Recorde Enter\")\n      }\n      else\n      {\n      this.color.update_color_status(this.color.form.value)\n      this.Notification.notification(\"Recorde Updated\")\n      }\n      this.color.form.reset();\n      this.color.initializeFormgroup();\n      this.onClose();\n    }\n  }\n\n  onClose()\n  {\n    this.color.form.reset();\n    this.color.initializeFormgroup();\n    this.matdilogref.close();\n    setTimeout(() => {\n      this.getcolors();\n      this.color.changeMessage(this.message)\n    }, 2000);\n  }\n\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ColorCodesComponent } from './color-codes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ColorCodesComponent,\n    data: {\n      title: 'Dashboard'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ColorCodesRoutingModule { }\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n<mat-toolbar>\\n<span class=\\\"example-fill-remaining-space\\\"></span>\\n<span>Status Code</span>\\n<span class=\\\"example-fill-remaining-space\\\"></span>\\n</mat-toolbar>\\n<app-color-list></app-color-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: 'color-codes.component.html'\n})\nexport class ColorCodesComponent implements OnInit {\n\n  ngOnInit(): void { }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ColorCodesComponent } from './color-codes.component';\nimport { ColorCodesRoutingModule } from './color-codes-routing.module';\nimport { ColorListComponent } from './color-list/color-list.component';\nimport { ColorCodeComponent } from './color-code/color-code.component';\nimport {MaterialModule} from '../../modules/material/material.module';\nimport {ReactiveFormsModule , FormsModule} from '@angular/forms';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { CommonModule } from '@angular/common';  \n\n@NgModule({\n  imports: [\n    FormsModule,\n    ChartsModule,\n    BsDropdownModule,\n    ColorCodesRoutingModule,\n    ButtonsModule.forRoot(),\n    MaterialModule,\n    ReactiveFormsModule,\n    ColorPickerModule,\n    CommonModule\n  ],\n  declarations: [ ColorCodesComponent , ColorListComponent, ColorCodeComponent ],\n  entryComponents : [ColorCodeComponent]\n})\nexport class ColorCodesModule { }\n","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n    <button mat-raised-button (click)=\\\"onCreate()\\\">\\n        <mat-icon>add</mat-icon>Create\\n      </button>\\n    <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n        <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n        <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n          <mat-icon>close</mat-icon>\\n        </button>\\n      </mat-form-field>\\n  <mat-table [dataSource]=\\\"colors\\\"  matSort>\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Id </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\" > {{element.id}} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"code\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Code </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.code}} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"description\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Description </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"colour_code\\\" [ngClass]=\\\"'customWidthClass'\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Colour </mat-header-cell>\\n   <mat-cell *matCellDef=\\\"let element\\\"   [ngStyle]=\\\"{'background-color':element.colour_code, color:'white'}\\\"> {{element.colour_code}} </mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row\\\">\\n      <button mat-icon-button (click)=\\\"onEdit(row)\\\"><mat-icon>launch</mat-icon></button>\\n      <button mat-icon-button color=\\\"warn\\\" (click)=\\\"onDelete(row)\\\"><mat-icon>delete_outline</mat-icon></button>\\n    </mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"loading\\\">\\n    <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n      Loading data...\\n    </mat-footer-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"noData\\\">\\n    <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n      No data.\\n    </mat-footer-cell>\\n  </ng-container>\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':colors!=null}\\\"></mat-footer-row>\\n  <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(colors!=null && colors.data.length==0)}\\\"></mat-footer-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbG9yLWNvZGVzL2NvbG9yLWxpc3QvY29sb3ItbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit , ViewChild } from '@angular/core';\nimport { ColorCodeService } from '../../../services/shared/color-code.service';\nimport { MatTableDataSource , MatSort , MatPaginator } from '@angular/material';\nimport {MatDialog , MatDialogConfig} from '@angular/material';\nimport { ColorCodeComponent } from '../color-code/color-code.component';\nimport { NotificationsService } from '../../../services/shared/notifications.service';\n\n\n@Component({\n  selector: 'app-color-list',\n  templateUrl: './color-list.component.html',\n  styleUrls: ['./color-list.component.scss']\n})\nexport class ColorListComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'code', 'description', 'colour_code', 'actions'];\n  constructor(private color : ColorCodeService , private dialog : MatDialog\n   , private Notification : NotificationsService) { }\n\n\n  searchKey;\n\n\n  @ViewChild(MatSort) sort : MatSort;\n  @ViewChild(MatPaginator) paginator :MatPaginator;\n\n  colors : MatTableDataSource<any>;\n  message:MatTableDataSource<any>;\n\n  getcolors()\n  {\n    this.color.getColorList().subscribe(data => {\n      this.message =  new MatTableDataSource(data as {id : number ,code: string, description: string, colour_code : string }[])\n     this.message.sort = this.sort;\n     this.message.paginator = this.paginator;\n     });\n  }\n\n  ngOnInit() {\n   this.color.getColorList().subscribe(data => {\n     this.colors =  new MatTableDataSource(data as {id : number ,code: string, description: string, colour_code : string }[])\n    this.colors.sort = this.sort;\n    this.colors.paginator = this.paginator;\n    });\n    this.getcolors()\n  }\n\n\n  \n\n  onSearchClear()\n  {\n    this.searchKey = \"\";\n    this.applyFilter();\n  }\n\n  applyFilter()\n  {\n    this.message.filter = this.searchKey.trim().toLowerCase();\n  }\n\n  onCreate()\n  {\n    const dilogconfige = new MatDialogConfig();\n    dilogconfige.disableClose = true;\n    dilogconfige.width = \"60%\";\n    dilogconfige.autoFocus = true;\n    const dilogref = this.dialog.open(ColorCodeComponent,dilogconfige)\n    dilogref.afterClosed().subscribe(result => {\n      setTimeout(() => {\n       this.ngOnInit();\n       }, 1000);\n    });\n  }\n\n  onEdit(row)\n  {\n    this.color.populateform(row);\n    const dilogconfige = new MatDialogConfig();\n    dilogconfige.disableClose = true;\n    dilogconfige.width = \"60%\";\n    dilogconfige.autoFocus = true;\n    const dilogref = this.dialog.open(ColorCodeComponent,dilogconfige)\n    dilogref.afterClosed().subscribe(result => {\n      setTimeout(() => {\n       this.ngOnInit();\n       }, 1000);\n    });\n  }\n\n  onDelete(row)\n  {\n    this.color.delete_status(row)\n    this.Notification.warn(\"Recorde Deleted\")\n    setTimeout(()=>{\n      this.ngOnInit();\n }, 500);\n  }\n\n}\n"],"sourceRoot":""}